{"version":3,"sources":["Components/TaskItem.js","Components/TaskList.js","Components/AddTask.js","Constants/FiltersIndex.js","Components/Filters.js","Containers/TaskContainer.js","index.js"],"names":["TaskItem","task","onCheck","onClick","id","type","checked","isCompleted","title","TaskList","taskList","map","AddTask","state","taskTitle","onChangeTitle","event","setState","target","value","onAddTask","addTask","props","this","placeholder","onChange","className","disabled","Component","FILTERS","Filters","currentFilter","changeFilter","style","background","TaskContainer","newTaskList","newTask","Date","now","push","taskId","newList","newFilter","filter","currentList","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.1e6c09ed.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TaskItem = ({ task, onCheck }) => {\r\n    const onCheckboxClick = () => {\r\n        onCheck(task.id);\r\n    };\r\n\r\nreturn (\r\n    <li>\r\n        <input \r\n            onClick={onCheckboxClick}\r\n            type=\"checkbox\" \r\n            checked={task.isCompleted} \r\n        />\r\n        {task.title}\r\n    </li>\r\n    );\r\n};\r\n\r\n\r\nexport default TaskItem;\r\n\r\n","import React from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\nconst TaskList = ({ taskList, onCheck }) => (\r\n  <ul>\r\n    {taskList.map(task => (\r\n      <TaskItem onCheck={onCheck} key={task.id} task={task} />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default TaskList;","import React, { Component } from 'react';\r\n\r\nexport default class AddTask extends Component {\r\n    state = {\r\n        taskTitle: ''\r\n    };\r\n\r\n    onChangeTitle = event => this.setState({ taskTitle: event.target.value });\r\n\r\n    onAddTask = () => {\r\n        const { addTask } = this.props;\r\n        const { taskTitle } = this.state;\r\n\r\n        addTask(taskTitle);\r\n\r\n        this.setState({ taskTitle: \"\" });\r\n    };\r\n    \r\n    render() {\r\n        const { onChangeTitle, onAddTask } = this;\r\n        const { taskTitle } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Task Title\" \r\n                    value={taskTitle} \r\n                    onChange={onChangeTitle} \r\n                    className=\"inputStyle\"                />\r\n                <button disabled={!taskTitle} onClick={onAddTask}>Add Task</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","export const FILTERS = {\r\n    COMPLETED: \"COMPLETED\",\r\n    UNCOMPLETED: \"UNCOMPLETED\",\r\n    ALL_TASKS: \"ALL_TASKS\"\r\n  };\r\n  ","import React from \"react\";\r\n\r\nimport { FILTERS } from \"../Constants/FiltersIndex\";\r\n\r\nconst Filters = ({ currentFilter, changeFilter }) => (\r\n  <div className=\"filters\">\r\n        <h4>To Do List:</h4>\r\n        <button\r\n        style={{\r\n            background: currentFilter === FILTERS.ALL_TASKS ? \"gray\" : \"inherit\"\r\n        }}\r\n        onClick={() => changeFilter(FILTERS.ALL_TASKS)}\r\n        className=\"filterButton\"\r\n        >\r\n        ALL\r\n        </button>\r\n        <button\r\n        style={{\r\n            background: currentFilter === FILTERS.COMPLETED ? \"gray\" : \"inherit\"\r\n        }}\r\n        onClick={() => changeFilter(FILTERS.COMPLETED)}\r\n        className=\"filterButton\"\r\n        >\r\n        Completed\r\n        </button>\r\n        <button\r\n        style={{\r\n            background: currentFilter === FILTERS.UNCOMPLETED ? \"gray\" : \"inherit\"\r\n        }}\r\n        onClick={() => changeFilter(FILTERS.UNCOMPLETED)}\r\n        className=\"filterButton\"\r\n        >\r\n        Uncompleted\r\n        </button>\r\n  </div>\r\n);\r\n\r\nexport default Filters;\r\n","import React, { Component } from \"react\";\r\nimport TaskList from \"../Components/TaskList\";\r\n\r\nimport AddTask from \"../Components/AddTask\";\r\n\r\nimport Filters from \"../Components/Filters\";\r\n\r\nimport { FILTERS } from \"../Constants/FiltersIndex\";\r\n\r\nexport default class TaskContainer extends Component {\r\n    state = {\r\n      taskList: [\r\n        { id: \"t1\", title: \"Task1\", isCompleted: true },\r\n        { id: \"t2\", title: \"Task2\", isCompleted: false }\r\n      ],\r\n      currentFilter: FILTERS.ALL_TASKS\r\n    };\r\n  \r\n    get currentList() {\r\n      const { currentFilter, taskList } = this.state;\r\n  \r\n      switch (currentFilter) {\r\n        case FILTERS.ALL_TASKS:\r\n          return taskList;\r\n  \r\n        case FILTERS.COMPLETED:\r\n          return taskList.filter(task => task.isCompleted);\r\n  \r\n        case FILTERS.UNCOMPLETED:\r\n          return taskList.filter(task => !task.isCompleted);\r\n  \r\n        default:\r\n          return taskList;\r\n      }\r\n    }\r\n  \r\n    addTask = title => {\r\n      const newTaskList = [...this.state.taskList];\r\n  \r\n      const newTask = {\r\n        title,\r\n        id: `${Date.now()}`,\r\n        isCompleted: false\r\n      };\r\n  \r\n      newTaskList.push(newTask);\r\n  \r\n      this.setState({ taskList: newTaskList });\r\n    };\r\n  \r\n    onCheck = taskId => {\r\n      const newList = this.state.taskList.map(task => {\r\n        if (task.id === taskId) {\r\n          return {\r\n            ...task,\r\n            isCompleted: !task.isCompleted\r\n          };\r\n        }\r\n  \r\n        return task;\r\n      });\r\n  \r\n      this.setState({ taskList: newList });\r\n    };\r\n  \r\n    changeFilter = newFilter => this.setState({ currentFilter: newFilter });\r\n  \r\n    render() {\r\n      const { currentFilter } = this.state;\r\n      const { addTask, onCheck, changeFilter, currentList } = this;\r\n  \r\n      return (\r\n        <div>\r\n          <Filters currentFilter={currentFilter} changeFilter={changeFilter} />\r\n          <AddTask addTask={addTask} />\r\n          <TaskList onCheck={onCheck} taskList={currentList} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  ","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TaskContainer from \"./Containers/TaskContainer\";\n\nimport \"./index.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TaskContainer />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}